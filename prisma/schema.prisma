generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider  = "postgresql"
  url       = env("DATABASE_URL")
  directUrl = env("DIRECT_URL")
}

model User {
  id                String   @id @default(uuid())
  phone             String   @unique
  name              String?
  verificationCode  String?
  verified          Boolean  @default(false)

  // Relationships this user is part of
  relationships     Relationship[]
  
  // Invites sent by this user
  sentInvites       Invite[] @relation("UserSentInvites")

  createdAt         DateTime @default(now())
  updatedAt         DateTime @updatedAt
}

model Relationship {
  id        String   @id @default(uuid())
  status    Status   @default(DATING)
  startDate DateTime @default(now())
  endDate   DateTime? // Optional end date - null means relationship is ongoing

  // The users in this relationship
  users     User[]

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Invite {
  id                String      @id @default(uuid())
  senderPhone       String      // Phone of the user sending the invite
  relationshipType  Status      // The type of relationship being requested
  status            InviteStatus @default(PENDING)
  message           String?     // Optional custom message with the invite
  
  // Relation to the user who sent the invite
  sender            User        @relation("UserSentInvites", fields: [senderPhone], references: [phone])
  
  createdAt         DateTime    @default(now())
  updatedAt         DateTime    @updatedAt
}

// Enum for relationship types
enum Status {
  DATING
  ENGAGED
  MARRIED
  SEPARATED
  WIDOWED
  SITUATIONSHIP
  FRIENDS_WITH_BENEFITS
  ON_A_BREAK
  OPEN_RELATIONSHIP
  POLYAMOROUS
}

// Enum for invite status
enum InviteStatus {
  PENDING     // Invite sent but not responded to
  ACCEPTED    // Invite was accepted
  DECLINED    // Invite was declined
  EXPIRED     // Invite has expired
  CANCELLED   // Invite was cancelled by sender
}
