generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider  = "postgresql"
  url       = env("DATABASE_URL")
  directUrl = env("DIRECT_URL")
}

model User {
  id                String   @id @default(uuid())
  phone             String   @unique
  name              String?
  relationshipStatus Status   @default(SINGLE)
  verificationCode  String?

  // Self-relation: a user can be linked to many other users
  partners          User[]   @relation("UserPartners")
  partneredWith     User[]   @relation("UserPartners")
  
  // Invites sent by this user
  sentInvites       Invite[] @relation("UserSentInvites")

  createdAt         DateTime @default(now())
  updatedAt         DateTime @updatedAt
}

model Invite {
  id              String      @id @default(uuid())
  senderPhone     String      // Phone of the user sending the invite
  recipientPhone  String      // Phone number being invited (not necessarily a user yet)
  status          InviteStatus @default(PENDING)
  message         String?     // Optional custom message with the invite
  
  // Relation to the user who sent the invite
  sender          User        @relation("UserSentInvites", fields: [senderPhone], references: [phone])
  
  createdAt       DateTime    @default(now())
  updatedAt       DateTime    @updatedAt
  
  // Ensure a user can only have one pending invite to a specific phone number
  @@unique([senderPhone, recipientPhone])
}

// Enum for relationship types
enum Status {
  SINGLE
  RELATIONSHIP
  SITUATIONSHIP
}

// Enum for invite status
enum InviteStatus {
  PENDING     // Invite sent but not responded to
  ACCEPTED    // Invite was accepted
  DECLINED    // Invite was declined
  EXPIRED     // Invite has expired
  CANCELLED   // Invite was cancelled by sender
}
